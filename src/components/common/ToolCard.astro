---
interface Props {
	href: string;
	icon: string;
	title: string;
	description: string;
	features: string[];
	class: string;
}

const { href, icon, title, description, features } = Astro.props;
---

<a href={href} class="tool-card glass-card">
	<div class="tool-icon">{icon}</div>
	<h3>{title}</h3>
	<p>{description}</p>
	<div class="tool-features">
		{features.map(feature => (
			<span class="feature">{feature}</span>
		))}
	</div>
</a>

<style>
	.tool-card {
		padding: 2rem;
		text-decoration: none;
		color: inherit;
		transition: all 0.3s ease;
		border-radius: var(--radius-xl);
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
		min-height: 280px;
		position: relative;
		overflow: hidden;
	}

	.tool-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: -100%;
		width: 100%;
		height: 100%;
		background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
		transition: left 0.5s ease;
	}

	.tool-card:hover::before {
		left: 100%;
	}

	.tool-card:hover {
		transform: translateY(-8px);
		box-shadow: var(--shadow-xl), var(--shadow-glow);
		border-color: var(--accent-primary);
	}

	.tool-icon {
		font-size: 4rem;
		margin-bottom: 1.5rem;
		filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
	}

	.tool-card h3 {
		font-size: 1.5rem;
		font-weight: 600;
		margin-bottom: 1rem;
		color: var(--text-primary);
	}

	.tool-card p {
		color: var(--text-secondary);
		margin-bottom: 1.5rem;
		line-height: 1.6;
		flex: 1;
	}

	.tool-features {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
		justify-content: center;
	}

	.feature {
		background: var(--bg-tertiary);
		border: 1px solid var(--border-primary);
		border-radius: var(--radius-md);
		padding: 0.25rem 0.75rem;
		font-size: 0.75rem;
		color: var(--text-accent);
		font-weight: 500;
	}

	.tool-card {
		animation: fadeIn 0.6s ease-out;
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>